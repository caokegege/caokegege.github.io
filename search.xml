<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[TPS和QPS的区别]]></title>
    <url>%2F2018%2F04%2F27%2FTPS%E5%92%8CQPS%E7%9A%84%E5%8C%BA%E5%88%AB%2F</url>
    <content type="text"><![CDATA[一、TPS：Transactions Per Second（每秒传输的事物处理个数），即服务器每秒处理的事务数。TPS包括一条消息入和一条消息出，加上一次用户数据库访问。（业务TPS = CAPS × 每个呼叫平均TPS） TPS是软件测试结果的测量单位。一个事务是指一个客户机向服务器发送请求然后服务器做出反应的过程。客户机在发送请求时开始计时，收到服务器响应后结束计时，以此来计算使用的时间和完成的事务个数。 一般的，评价系统性能均以每秒钟完成的技术交易的数量来衡量。系统整体处理能力取决于处理能力最低模块的TPS值。 二、QPS：Queries Per Second每秒查询率QPS是对一个特定的查询服务器在规定时间内所处理流量多少的衡量标准，在因特网上，作为域名系统服务器的机器的性能经常用每秒查询率来衡量。 对应fetches/sec，即每秒的响应请求数，也即是最大吞吐能力。 QPS: 每秒钟处理完请求的次数；注意这里是处理完。具体是指发出请求到服务器处理完成功返回结果。可以理解在server中有个counter，每处理一个请求加1，1秒后counter=QPS。 TPS：每秒钟处理完的事务次数，一般TPS是对整个系统来讲的。一个应用系统1s能完成多少事务处理，一个事务在分布式处理中，可能会对应多个请求，对于衡量单个接口服务的处理能力，用QPS比较多。 并发量：系统能同时处理的请求数 RT：响应时间，处理一次请求所需要的平均处理时间 计算关系： QPS = 并发量 / 平均响应时间 并发量 = QPS * 平均响应时间]]></content>
  </entry>
  <entry>
    <title><![CDATA[MarkDown syntax 有道云笔记]]></title>
    <url>%2F2018%2F04%2F20%2FMarkDown-syntax-youdao%2F</url>
    <content type="text"><![CDATA[利用GitHub把个人博客搭建完成了，就想着以后要多写点博客，才对的起GitHub提供的便利。写博客用到的都是markdown语法，因为以前一直用有道云笔记来记录东西。所以熟悉有道云的语法，虽说和主流的markdown语法有很大的出入，但是基本的操作都是有了。有道的流程图功能很强大，但是放到这里不太好用了，真是个很大的遗憾。 一个#是一级标题两个##是二级标题三个###是三级标题四个####是四级标题五个#####是五级标题六个######是六级标题表格1234title1 | header 2 | title3---|---|---row 1 col 1 | row 1 col 2 | row 1 col 3row 2 col 1 | row 2 col 2 | row 2 col 3 title1 header 2 title3 row 1 col 1 row 1 col 2 row 1 col 3 row 2 col 1 row 2 col 2 row 2 col 3 代码用 ``` code ```包围123public static void main()&#123; sout(&quot;这是插入代码&quot;)&#125; 图片1![image](url) 链接1[点这里可以跳转](url) 点这里可以跳转 这个是加黑字体1**这个是加黑字体** 这个是斜体1*这个是斜体* 这个是横线1~~这个是横线~~ ==这个是加背景颜色的字体==1==这个是加背景颜色的字体== 分割线1---是分割线 没有排序的列表1234567891011- a - a.a - a.b - a.b.a - a.b.b - a.b.b.a- b- - b.a- - b.b- - - b.b.a- c a a.a a.b a.b.a a.b.b a.b.b.a b b.a b.b b.b.a c 有序列表1234561. 第一个层级 1. 这是1.1 2. 这是1.2 1. 这是1.2.1 2. 这是1.2.22. 第二个层级 第一个层级 这是1.1 这是1.2 这是1.2.1 这是1.2.2 这是第三个 第二个层级 待办事项12- [ ] 没有完成的作业- [x] 已经完成的工作 没有完成的作业 已经完成的工作 html代码可以执行出来1234567&lt;html&gt;&lt;!--在这里插入内容--&gt;在这里可以写入html的内容&lt;br/&gt;&lt;hr/&gt;&lt;a href=&apos;http://github.com&apos;&gt;点击可以跳转到github&lt;/a&gt;&lt;br/&gt;以上都是html的内容&lt;/html&gt; 在这里可以写入html的内容点击可以跳转到github以上都是html的内容 下面是数学公式和时许图，有道云笔记的功能，好像拿出来不好用了 1E = mc^2 12graph LRA--&gt;B 123sequenceDiagramA-&gt;&gt;B: How are you?B-&gt;&gt;A: Great! 12345678ganttdateFormat YYYY-MM-DDsection S1T1: 2014-01-01, 9dsection S2T2: 2014-01-11, 9dsection S3T3: 2014-01-02, 9d]]></content>
      <categories>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F04%2F19%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>搭建blog</category>
      </categories>
  </entry>
</search>
